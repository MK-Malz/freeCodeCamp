//get data
fetch(
  "https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/GDP-data.json"
)
  .then((response) => response.json())
  .then((data) => {
    let dataset = data.data;
    //console.log(dataset)

    // creata DataViz
    const w = 500;
    const h = 500;
    padding = 60;

    var dates = dataset.map(function (item) {
      return new Date(item[0]);
    });

    const maxDate = new Date(d3.max(dates));
    //maxDate.setMonth(maxDate.getMonth() + 3);

    const xScale = d3
      .scaleTime()
      .domain([d3.min(dates), maxDate])
      .range([padding, w]);

    const yScale = d3
      .scaleLinear()
      .domain([0, d3.max(dataset, (d) => d[1])])
      .range([h - padding, padding]);

    const svg = d3
      .select("body")
      .append("svg")
      .attr("width", w)
      .attr("height", h);

    const widthBar = 0;
    svg
      .selectAll("rect")
      .data(dataset)
      .enter()
      .append("rect")
      .attr("x", function (d, i) {
        return xScale(dates[i]);
      })
      .attr("y", (d) => yScale(d[1]))
      .attr("width", 10)
      .attr("height", (d) => d[1]);

    /*    .attr('x', function (d, i) {
        return xScale(yearsDate[i]);
      })
      .attr('y', function (d) {
        return height - d;
      })
      
    /*svg.selectAll("text")
       .data(dataset)
       .enter()
       .append("text")
       .text((d) =>  (d[0] + "," + d[1]))
       .attr("x", (d) => xScale(d[0] + 10))
       .attr("y", (d) => yScale(d[1]))*/

    const xAxis = d3.axisBottom().scale(xScale);

    const yAxis = d3.axisLeft(yScale);

    svg
      .append("g")
      .attr("transform", "translate(0," + (h - padding) + ")")
      .call(xAxis);

    svg
      .append("g")
      .attr("transform", "translate(" + padding + ",0)")
      .call(yAxis);
  });
